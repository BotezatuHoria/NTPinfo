stages:
  - typecheck
  - lint
  - test

image: python:3.13.3

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PYTHONPATH: "$CI_PROJECT_DIR"
  #for container
  POSTGRES_DB: myapp_test
  POSTGRES_USER: test_user
  POSTGRES_PASSWORD: test_password

  #for app
  DB_HOST: postgres
  DB_PORT: 5432
  DB_NAME: myapp_test
  DB_USER: test_user
  DB_PASSWORD: test_password

  DATABASE_URL: postgresql://test_user:test_password@postgres:5432/myapp_test

cache:
  key:
    files:
      - server/requirements.txt
  paths:
    - .cache/pip
    - .cache/wheels

before_script:
  - python --version
  - python -m venv venv
  - source venv/bin/activate
  - pip install --upgrade pip
  - pip wheel --wheel-dir=.cache/wheels -r server/requirements.txt
  - pip install --no-index --find-links=.cache/wheels -r server/requirements.txt

typecheck:
  stage: typecheck
  script:
    - source venv/bin/activate
    - mypy
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

lint:
  stage: lint
  script:
    - source venv/bin/activate
    - flake8 server/
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

services:
  - name: postgres:15
    alias: postgres

server_tests:
  stage: test
  script:
    - source venv/bin/activate
    - apt-get update && apt-get install -y postgresql-client
    - until pg_isready -h postgres -p 5432; do echo "Waiting for postgres..."; sleep 1; done
    - PGPASSWORD=test_password psql -h postgres -U test_user -d myapp_test -c "SELECT 1;"
    - pytest --cov=server --cov-report=term-missing server/tests/
  coverage: '/TOTAL\s+\d+\s+\d+\s+\d+\s+(\d+%)$/'
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
