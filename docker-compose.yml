services:
  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "15432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      retries: 5
    networks:
      - my-net

  backend:
    build:
      context: .
      dockerfile: server/Dockerfile
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./logs:/app/logs
    networks:
      - my-net

  frontend:
    build:
      context: .
      dockerfile: client/Dockerfile
      args:
        VITE_SERVER_HOST_ADDRESS: ${VITE_SERVER_HOST_ADDRESS}
        VITE_STATUS_THRESHOLD: ${VITE_STATUS_THRESHOLD}
    ports:
      - "5173:80"
    networks:
      - my-net

  #  nginx:
  #    image: nginx:latest
  #    container_name: nginx_proxy
  #    ports:
  #      - "80:80"
  #      - "443:443"
  #    volumes:
  #      - ./nginx/conf.d:/etc/nginx/conf.d
  #      - ./nginx/certbot/www:/var/www/certbot
  #      - ./nginx/certbot/conf:/etc/letsencrypt
  #    depends_on:
  #      - frontend
  #      - backend
  #    networks:
  #      - my-net

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certbot/conf:/etc/letsencrypt
    depends_on:
      - frontend
      - backend
    networks:
      - my-net


volumes:
  pgdata:

networks:
  my-net:
    driver: bridge
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: ${DOCKER_NETWORK_SUBNET}
          gateway: ${DOCKER_NETWORK_GATEWAY}